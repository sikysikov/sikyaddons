<?xml version="1.0" encoding="UTF-8"?><scraper name="csfdcz" date="2017-11-03" framework="1.1">

	<!-- input : $$1=nfo file -->
	<!-- output: <url>*</url> -->
	<!-- output: $$10=user-agent -->
    <NfoUrl dest="3">
        <RegExp output="user-agent=Mozilla%2F5.0%20%28Windows%20NT%206.1%3B%20Win64%3B%20x64%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F78.0.3904.97%20Safari%2F537.36" dest="10"><expression/></RegExp>
        <RegExp input="$$1" output="&lt;url gzip=&quot;yes&quot; cache=&quot;CSFD.prehled-\1.html&quot;&gt;https://www.csfd.cz/film/\1/prehled/|$$10&lt;/url&gt;&lt;id&gt;\1&lt;/id&gt;" dest="3">
            <expression>https?:\/\/(?:www\.)?csfd\.cz/film/(\d+)</expression>
        </RegExp>
    </NfoUrl>

	<!-- input : $$1=query string -->
	<!-- output: <url>*</url> -->
	<!-- output: $$10=user-agent -->
	<!-- output: $$8=search url object -->
    <CreateSearchUrl clearbuffers="no" dest="8">
     <RegExp output="user-agent=Mozilla%2F5.0%20%28Windows%20NT%206.1%3B%20Win64%3B%20x64%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F78.0.3904.97%20Safari%2F537.36" dest="10"><expression/></RegExp>
        <RegExp input="$$1" output="&lt;url gzip=&quot;yes&quot; cache=&quot;CSFD.hledat-\1-$$3.html&quot;&gt;https://www.csfd.cz/hledat/?q=\1|$$10&lt;/url&gt;" dest="8">
            <RegExp conditional="titlepartsremove" input="$$1" output="\1" dest="1">
                <expression noclean="1">(.*)%20part%20\d+$</expression>
            </RegExp>
            <RegExp input="$$1" output="-\1" dest="9+">
                <expression repeat="yes">(.+?)(?:%20|$)</expression>
            </RegExp>
            <RegExp input="$$1" output=" \1" dest="5+">
                <expression repeat="yes">(.+?)(?:%20|$)</expression>
            </RegExp>
            <RegExp input="$$5" output="\1" dest="5">
                <expression repeat="no"> (.*)</expression>
            </RegExp>
            <RegExp input="$$1" output="\1" dest="4">
                <expression repeat="no">(.+?)(?:%20|$)</expression>
            </RegExp>
            <RegExp input="$$2" output="\1" dest="3">
                <expression>(\d+)</expression>
            </RegExp>
            <expression noclean="1"/>
        </RegExp>
    </CreateSearchUrl>

	<!-- input : $$1=search html -->
	<!-- input : $$2=search url -->
	<!-- input : $$10=user-agent -->
	<!-- output: <results><entity><title>*</title><url>*</url></entity>*</results> -->
    <GetSearchResults clearbuffers="no" dest="8">
        <RegExp input="$$7" output="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&lt;results sorted=&quot;yes&quot;&gt;\1&lt;/results&gt;" dest="8">
           <RegExp input="$$6" output="&lt;entity&gt;&lt;title&gt;\2\3 \4&lt;/title&gt;&lt;url gzip=&quot;yes&quot; cache=&quot;CSFD.prehled-\1.html&quot;&gt;https://www.csfd.cz/film/\1/prehled/|$$10&lt;/url&gt;&lt;/entity&gt;" dest="7">

                <!-- extract search-list -->
                <RegExp conditional="!csfdsearchext" input="$$1" output="\1" dest="1">
                    <expression repeat="no" noclean="1">&lt;div class=&quot;box-content[^&quot;]*?&quot;&gt;(.*?)&lt;div class=&quot;box-content</expression>
                </RegExp>
                <!-- hlavni nabidka -->
                <!-- force name & year --> 
                <RegExp conditional="czfilenames" input="$$1" output="&lt;u&gt;\1&lt;/u&gt;&lt;t&gt;\2&lt;/t&gt;&lt;t1&gt; \4&lt;/t1&gt;&lt;t2&gt; (\3)&lt;/t2&gt;" dest="6+">
                        <expression repeat="no" noclean="1,2">&lt;a href=&quot;\/film\/(?i)(\d+$$9)[^\/]*?\/&quot; class=&quot;film-title-name&quot;&gt;([^&lt;]*)[^\(]*?\(($$3)\)&lt;\/span&gt;(.*?)&lt;\/h3&gt;</expression>
                </RegExp>
                <!-- force search name & year -->
                 <RegExp input="$$1" output="&lt;u&gt;\1&lt;/u&gt;&lt;t&gt;\2&lt;/t&gt;&lt;t1&gt; \4&lt;/t1&gt;&lt;t2&gt; (\3)&lt;/t2&gt;" dest="6+">
                        <expression repeat="no" noclean="1,2">&lt;a href=&quot;\/film\/([^\/]*?)\/&quot; class=&quot;film-title-name&quot;&gt;([^&lt;]*)[^\(]*\(($$3)\)&lt;\/span&gt;([^:]*?&lt;p class=&quot;search-name&quot;&gt;(?i)\($$5.*?)&lt;\/p&gt;</expression>
                </RegExp>
                <!-- force first word & year -->
<!--                <RegExp conditional="czfilenames" input="$$1" output="&lt;u&gt;\1&lt;/u&gt;&lt;t&gt;\2&lt;/t&gt;&lt;t1&gt; \4&lt;/t1&gt;&lt;t2&gt; (\3)&lt;/t2&gt;" dest="6+">
                        <expression repeat="no" noclean="1,2">&lt;a href=&quot;\/film\/(?i)(\d+-$$4[^\/]*)\/&quot; class=&quot;film-title-name&quot;&gt;([^&lt;]*)[^\(]*\(($$3)\)&lt;\/span&gt;(.*?)&lt;\/h3&gt;</expression>
                </RegExp> -->
                <!-- force first word of search name & year -->
                <RegExp input="$$1" output="&lt;u&gt;\1&lt;/u&gt;&lt;t&gt;\2&lt;/t&gt;&lt;t1&gt; \4&lt;/t1&gt;&lt;t2&gt; (\3)&lt;/t2&gt;" dest="6+">
                        <expression repeat="no" noclean="1,2">&lt;a href=&quot;\/film\/([^\/]*?)\/&quot; class=&quot;film-title-name&quot;&gt;([^&lt;]*)[^\(]*\(($$3)\)&lt;\/span&gt;([^:]*?&lt;p class=&quot;search-name&quot;&gt;(?i)\($$4.*?)&lt;\/p&gt;</expression>
                </RegExp>
                 <!-- force year only -->                  
                <RegExp input="$$1" output="&lt;u&gt;\1&lt;/u&gt;&lt;t&gt;\2&lt;/t&gt;&lt;t1&gt; \4&lt;/t1&gt;&lt;t2&gt; (\3)&lt;/t2&gt;" dest="6+">
                    <expression repeat="no" noclean="1,2">&lt;a href=&quot;\/film\/([^\/]*?)\/&quot; class=&quot;film-title-name&quot;&gt;([^&lt;]*)[^\(]*\(($$3)\)&lt;\/span&gt;(.*?)&lt;\/h3&gt;</expression>
                </RegExp>       
                <!-- get the rest of the list -->
                <RegExp input="$$1" output="&lt;u&gt;\1&lt;/u&gt;&lt;t&gt;\2&lt;/t&gt;&lt;t1&gt; \4&lt;/t1&gt;&lt;t2&gt; \3&lt;/t2&gt;" dest="6+">
                    <expression repeat="yes" noclean="1,2">&lt;a href=&quot;\/film\/([^\/]*?)\/&quot; class=&quot;film-title-name&quot;&gt;(.*?)&lt;\/a&gt; &lt;span class=&quot;film-title-info&quot;&gt;&lt;span class=&quot;info&quot;&gt;(.*?)&lt;\/span&gt;(.*?)&lt;\/h3&gt;</expression>
                </RegExp>
                <expression repeat="yes" noclean="1,2,3">&lt;u&gt;(.*?)&lt;/u&gt;&lt;t&gt;(.*?)&lt;/t&gt;(?:&lt;t1&gt;(.*?)&lt;/t1&gt;)?(?:&lt;t2&gt;(.*?)&lt;/t2&gt;)?</expression>
            </RegExp>
       <expression noclean="1"/>
        </RegExp>
    </GetSearchResults>

	<!-- input : $$1=detail html -->
	<!-- output : $$10=user-agent -->
    <GetDetails clearbuffers="no" dest="8">
        <RegExp output="user-agent=Mozilla%2F5.0%20%28Windows%20NT%206.1%3B%20Win64%3B%20x64%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Chrome%2F78.0.3904.97%20Safari%2F537.36" dest="10"><expression/></RegExp>
        <RegExp input="$$5" output="&lt;details&gt;\1&lt;/details&gt;" dest="8">
            <!-- Titles -->
            <RegExp output="" dest="11"><expression clear="yes"></expression></RegExp>
            <RegExp output="" dest="7"><expression clear="yes"></expression></RegExp>
            <!-- local title $$11 -->
            <RegExp input="$$1" output="\1" dest="11+">
                <expression noclean="1" trim="1">&lt;h1[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- Isolate more titles -->
            <RegExp input="$$1" output="\1" dest="6">
                <expression noclean="1" trim="1">&lt;ul class=&quot;film-names&quot;&gt;([\s\S]*?)&lt;/ul&gt;</expression>
            </RegExp>
            <!-- original title $$12 -->
            <RegExp input="$$6" output="\1" dest="12">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;(?!Česko)[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- allow latin only in original title -->
            <RegExp conditional="latinonlyoriginal" input="$$12" output="\1" dest="12">
                <RegExp output="$$12" dest="19">
                    <expression />
                </RegExp>
                <RegExp input="$$19" output="\1" dest="12">
                    <expression clear="yes">^([\sA-Za-zÀ-ȕ0-9()-_’&#39;“„&lt;&gt;{}&quot;/|;:.,~!?@#$%^=&amp;*\]\\\(\)\[¿§«»ω¤°€¥£¢¡®©_+║´]+)</expression>
                </RegExp>
                <expression clear="yes">^($$19)$</expression>
            </RegExp>
            <!-- EN title $$13 without fallback (can be empty)-->
            <!-- EN -->
            <RegExp input="$$6" output="\1" dest="13">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;angličtina&quot;[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- New Zealand -->
            <RegExp input="$$6" output="\1" dest="13">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;Nový Zéland&quot;[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- Ireland -->
            <RegExp input="$$6" output="\1" dest="13">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;Irsko&quot;[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- Australia -->
            <RegExp input="$$6" output="\1" dest="13">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;Austrálie&quot;[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- Canada -->
            <RegExp input="$$6" output="\1" dest="13">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;Kanada&quot;[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- GB -->
            <RegExp input="$$6" output="\1" dest="13">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;Velká Británie&quot;[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- USA -->
            <RegExp input="$$6" output="\1" dest="13">
                <expression noclean="1" trim="1">class=&quot;flag&quot; title=&quot;USA&quot;[^&gt;]*&gt;([^&lt;]*)&lt;</expression>
            </RegExp>
            <!-- Remove working title -->
            <RegExp input="$$6" output="\1" dest="14">
                <expression noclean="1" trim="1">class=&quot;flag&quot; [^&gt;]*&gt;([^&lt;]*)[^&gt;]*&gt;\(pracovn</expression>
            </RegExp>
            <!-- Remove festival title -->
            <RegExp input="$$6" output="\1" dest="14">
                <expression noclean="1" trim="1">class=&quot;flag&quot; [^&gt;]*&gt;([^&lt;]*)[^&gt;]*&gt;\(festivalový</expression>
            </RegExp>
            <RegExp input="$$12" output="" dest="12">
                <expression noclean="1">^$$14$</expression>
            </RegExp>
            <RegExp input="$$13" output="" dest="13">
                <expression noclean="1">^$$14$</expression>
            </RegExp>
            <!-- CZ title $$14 with local fallback -->
            <RegExp output="$$11" dest="14">
                <expression />
            </RegExp>
            <RegExp input="$$6" output="\1" dest="14">
                <expression trim="1">class=&quot;flag&quot; title=&quot;Česko&quot;[^&gt;]*&gt;([^&lt;]*)</expression>
            </RegExp>
            <!-- SK title $$15 with local fallback -->
            <RegExp output="$$11" dest="15">
                <expression />
            </RegExp>
            <RegExp input="$$6" output="\1" dest="15">
                <expression trim="1">class=&quot;flag&quot; title=&quot;Slovensko&quot;[^&gt;]*&gt;([^&lt;]*)</expression>
            </RegExp>
            <!-- use ENG secondary title in case non-latin original title was removed -->
            <RegExp conditional="latinonlyoriginal" input="$$12" output="$$13" dest="12">
                <expression noclean="1">^.{0}$</expression>
            </RegExp>
            <!-- clear secondary title in $$12 in case of Czech movie -->
            <RegExp input="$$1" output="" dest="12">
                <expression noclean="1">&lt;div class=&quot;origin&quot;&gt;Česko</expression>
            </RegExp>
            
          <!-- construct title -->
          <RegExp output="" dest="6"><expression clear="yes"></expression></RegExp>
            <!-- primary selection -->
            <RegExp output="$$11" dest="16">
                <expression />
            </RegExp>
            <RegExp input="$INFO[titleprimaryl]" output="$$12" dest="16">
                <expression noclean="1" >^original$</expression>
            </RegExp>
            <RegExp input="$INFO[titleprimaryl]" output="$$6" dest="16">
                <!-- local fallback for EN -->
                <RegExp output="$$11" dest="6">
                    <expression />
                </RegExp>
                <RegExp input="$$13" output="$$13" dest="6">
                    <expression noclean="1">(.+)</expression>
                </RegExp>
                <expression noclean="1" >^en$</expression>
            </RegExp>
            <RegExp input="$INFO[titleprimaryl]" output="$$14" dest="16">
                <expression noclean="1" >^cs$</expression>
            </RegExp>
            <RegExp input="$INFO[titleprimaryl]" output="$$15" dest="16">
                <expression noclean="1" >^sk$</expression>
            </RegExp>

            <!-- secondary selection -->
            <RegExp output="$$12" dest="17">
                <expression />
            </RegExp>
            <RegExp input="$INFO[titlesecondaryl]" output="$$6" dest="17">
                <!-- original fallback for EN -->
                <RegExp output="$$12" dest="6">
                    <expression />
                </RegExp>
                <RegExp input="$$13" output="$$13" dest="6">
                    <expression noclean="1">(.+)</expression>
                </RegExp>
                <expression noclean="1" >^en$</expression>
            </RegExp>

          <!-- title combination selection -->
            <!-- fallback for missing  secondary -->
            <RegExp output="$$16" dest="20">
                <expression />
            </RegExp>
            <!-- primary with secondary -->
            <RegExp input="$$17" output="$$16 ($$17)" dest="20">
                <expression>(.+)</expression>
            </RegExp>
            <!-- swapped primary with secondary override -->
            <RegExp conditional="titleswap" input="$$17" output="$$17 ($$16)" dest="20">
                <expression>(.+)</expression>
            </RegExp>
            <!-- remove secondary if same as primary override -->
            <RegExp conditional="titlesame" input="$$16" output="$$16" dest="20">
                <expression noclean="1">^$$17$</expression>
            </RegExp>
            <!-- primary only override -->
            <RegExp conditional="!titlesecondary" output="$$16" dest="20">
                <expression />
            </RegExp>
            <!-- output title -->
            <RegExp conditional="latinonlyoriginal" output="$$19" dest="12">
                <expression />
            </RegExp>
            <RegExp output="&lt;title&gt;$$20&lt;/title&gt;&lt;originaltitle&gt;$$12&lt;/originaltitle&gt;" dest="7+">
                <expression/>
            </RegExp>
            
           
            <!-- plot & reviews -->
            <RegExp input="$$1" output="\1[CR][CR]" dest="6">
                  <expression trim="1" clear="yes">class=&quot;(?:plot-full|plot-full hidden)&quot;&gt;[^&lt;]*&lt;p&gt;\s(.*?)\s*?&lt;em class=&quot;span-more-small&quot;</expression>
            </RegExp>
            <RegExp conditional="csfdreviews" input="$$6" output="&lt;outline&gt;\1&lt;/outline&gt;" dest="7+">
                <expression/>
            </RegExp>
            <RegExp conditional="csfdreviews" input="$$6" output="[B]RECENZE[/B] z ČSFD:[CR][CR]" dest="6+">
                <expression trim="1">(.*)</expression>
            </RegExp>
            <RegExp output="" dest="5"><expression clear="yes"></expression></RegExp>
            <RegExp conditional="csfdreviews" input="$$1" output="@[B]\1[/B][CR][I]\2[/I][CR][CR]" dest="5+">
                <expression trim="1" repeat="yes">class=&quot;user-title-name&quot;&gt;(.*?)&lt;\/a&gt;[\s\S]*?recenze\/\?comment(?:[\s\S]*?)&lt;\/div&gt;[^p]([\s\S]*?)&lt;span class=&quot;comment-date</expression>
            </RegExp>
            <RegExp conditional="reviewfix" input="$$5" output="\1" dest="6+">
                <expression repeat="yes">([\sA-Za-zÀ-ȕ0-9(),-_’&#39;“„&lt;&gt;{}&quot;/|;:.~!?@#$%^=&amp;*\]\\\(\)\[¿§«»ω¤°€¥£¢¡®©_+║´]+)</expression>
            </RegExp>
            <RegExp conditional="reviewfix" input="$$6" output="&lt;plot&gt;\1&lt;/plot&gt;" dest="7+">
                <expression noclean="1" />
            </RegExp>
            <RegExp conditional="!reviewfix" output="&lt;plot&gt;$$6$$5&lt;/plot&gt;" dest="7+">
                <expression noclean="1" />
            </RegExp>
            <!-- runtime -->
            <RegExp input="$$1" output="&lt;runtime&gt;\1&lt;/runtime&gt;" dest="7+">
                <expression repeat="no" trim="1" noclean="1">&lt;div class=&quot;origin&quot;&gt;[\s\S]*?(\d+).min</expression>
            </RegExp>
            <!-- rating -->
            <RegExp input="$$1" output="&lt;rating max=&quot;100&quot;&gt;\1&lt;/rating&gt;" dest="7+">
                <expression repeat="no" trim="1" noclean="1">rating-average[^0-9]*?([0-9]+)%</expression>
            </RegExp>
            <!-- votes -->
            <RegExp input="$$1" output="&lt;votes&gt;\1&lt;/votes&gt;" dest="7+">
                <expression repeat="no" trim="1" noclean="1">class=&quot;counter&quot;&gt;\((.*?)\)&lt;</expression>
            </RegExp>s
            <!-- year -->
            <RegExp input="$$1" output="&lt;year&gt;\1&lt;/year&gt;" dest="7+">
                <expression repeat="no" trim="1" noclean="1">&lt;div class=&quot;origin&quot;&gt;[\s\S]*?&lt;span&gt;(\d+)</expression>
            </RegExp>
            <!-- director -->
            <RegExp input="$$1" output="\1" dest="4">  
                 <expression repeat="no" noclean="1">&lt;h4&gt;Režie:([^:]*?)&lt;\/div&gt;</expression>
            </RegExp>
            <RegExp input="$$4" output="&lt;director&gt;\1&lt;/director&gt;" dest="7+">
                <expression repeat="yes" noclean="1">&lt;a href[^&gt;]*&gt;([^&lt;]*)</expression>
            </RegExp>
            <!-- credits -->
            <RegExp output="" dest="4"><expression clear="yes"></expression></RegExp>
            <RegExp input="$$1" output="\1" dest="4">  
                 <expression repeat="no" noclean="1">&lt;h4&gt;Scénář:([^:]*?)&lt;\/div&gt;</expression>
            </RegExp>
            <RegExp input="$$4" output="&lt;credits&gt;\1&lt;/credits&gt;" dest="7+">
                <expression repeat="yes" noclean="1">&lt;a href[^&gt;]*&gt;([^&lt;]*)</expression>
            </RegExp>
            <RegExp output="" dest="4"><expression clear="yes"></expression></RegExp>
            <RegExp input="$$1" output="\1" dest="4">  
                 <expression repeat="no" noclean="1">&lt;h4&gt;Kamera:([^:]*?)&lt;\/div&gt;</expression>
            </RegExp>
            <RegExp input="$$4" output="&lt;credits&gt;\1&lt;/credits&gt;" dest="7+">
                <expression repeat="yes" noclean="1">&lt;a href[^&gt;]*&gt;([^&lt;]*)</expression>
            </RegExp>
            <RegExp output="" dest="4"><expression clear="yes"></expression></RegExp>
            <RegExp input="$$1" output="\1" dest="4"> 
                 <expression repeat="no" noclean="1">&lt;h4&gt;Hudba:([^:]*?)&lt;\/div&gt;</expression>
            </RegExp>
            <RegExp input="$$4" output="&lt;credits&gt;\1&lt;/credits&gt;" dest="7+">
                <expression repeat="yes" noclean="1">&lt;a href[^&gt;]*&gt;([^&lt;]*)</expression>
            </RegExp>
            <!-- genres -->
             <RegExp output="" dest="4"><expression clear="yes"></expression></RegExp>
            <RegExp input="$$1" output="\1/" dest="4"> 
                 <expression repeat="no">&lt;div class=&quot;genres&quot;&gt;(.*?)&lt;/div</expression>
            </RegExp>
            <RegExp input="$$4" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="7+">
                <expression repeat="yes" noclean="1" trim="1">([^\/]*?)/</expression>
            </RegExp>
            <!-- country -->
             <RegExp output="" dest="4"><expression clear="yes"></expression></RegExp>
            <RegExp input="$$1" output="\1/" dest="4"> 
                 <expression repeat="no">&lt;div class=&quot;origin&quot;&gt;([^,]*)</expression>
            </RegExp>
            <RegExp input="$$4" output="&lt;country&gt;\1&lt;/country&gt;" dest="7+">
                <expression repeat="yes" noclean="1" trim="1">([^\/]*?)/</expression>
            </RegExp>			
            <!-- csfd thumb-->
            <RegExp conditional="csfdposter" input="$$1" output="\1" dest="6">
                <expression repeat="no" noclean="1" clear="yes">class=&quot;film-posters([\s\S]*?)&lt;\/div</expression>
            </RegExp>
            <RegExp conditional="csfdposter" input="$$6" output="&lt;thumb&gt;https://\1|$$10&lt;/thumb&gt;" dest="7+">
                <expression repeat="no" noclean="1">srcset=&quot;.*(image.pmgstatic.com\/.*?\..*?g)</expression>
            </RegExp>
            <!-- fallback lo-res poster -->
            <RegExp conditional="csfdposter" input="$$6" output="&lt;thumb&gt;https://\1|$$10&lt;/thumb&gt;" dest="7+">
                <expression repeat="no" noclean="1">(image.pmgstatic.com\/.*?\..*?g)</expression>
            </RegExp>
            <!-- actors -->     
            <RegExp input="$$1" output="&lt;url function=&quot;GetCSFDActors&quot; gzip=&quot;yes&quot; cache=&quot;CSFD.hraji-\1.html&quot;&gt;https://www.csfd.cz/film/\1/hraji/|$$10&lt;/url&gt;" dest="5">
                <expression repeat="no" noclean="1" trim="1">href=&quot;https://www.csfd.cz/film/(.*?)/</expression> 
            </RegExp>
            <RegExp conditional="csfdart" input="$$1" output="&lt;url function=&quot;GetCSFDFanarts&quot; gzip=&quot;yes&quot; cache=&quot;CSFD.galerie-\1.html&quot;&gt;https://www.csfd.cz/film/\1/galerie/|$$10&lt;/url&gt;" dest="5+">
                <expression repeat="no" noclean="1" trim="1">href=&quot;https://www.csfd.cz/film/(.*?)/</expression> 
            </RegExp>
            <expression noclean="1" />
        </RegExp>
    </GetDetails>

    <GetCSFDActors clearbuffers="no" dest="8">
        <RegExp input="$$7" output="&lt;details&gt;\1&lt;/details&gt;" dest="8">
                <RegExp input="$$1" output="\1" dest="6">
                    <expression repeat="no" noclean="1">&lt;div class=&quot;box-content&quot;&gt;\s*?&lt;article([\s\S]*?)&lt;aside</expression> 
                </RegExp>
                <RegExp input="$$6" output="&lt;actor&gt;&lt;name&gt;\2&lt;/name&gt;&lt;thumb&gt;https://\1|$$10&lt;/thumb&gt;&lt;/actor&gt;" dest="7+">    
                    <expression repeat="yes" noclean="1">(image.pmgstatic.com/cache/resized/.*?)&quot;[\s\S]*?class=&quot;film-title-name&quot;[^&gt;]*?&gt;(.*?)&lt;/a</expression>
                </RegExp>    
            <expression noclean="1" />
        </RegExp>
    </GetCSFDActors>
    
    <GetCSFDFanarts clearbuffers="no" dest="8">
        <RegExp conditional="csfdart" input="$$7" output="&lt;details&gt;\1&lt;/details&gt;" dest="8">
                <RegExp conditional="csfdart" output="" dest="9"><expression clear="yes"></expression></RegExp>
                <RegExp conditional="csfdart" input="$INFO[csfdartres]" output="\1" dest="11">
                    <expression />
                </RegExp>
                <RegExp conditional="csfdart" input="$$1" output="\1" dest="6">
                    <expression repeat="no" noclean="1">tab-content-gallery([\s\S]*?)&lt;aside</expression> 
                </RegExp>
                <!-- selected resolution -->
                <RegExp conditional="csfdart" input="$$6" output="&lt;thumb&gt;https://\1|$$10&lt;/thumb&gt;" dest="9+">    
                    <expression repeat="yes" noclean="1">(image.pmgstatic.com\/cache\/resized\/w$$11[^.]*\.jpg)</expression>
                </RegExp> 
                <!-- fallback basic resolution -->
                <RegExp conditional="csfdart" input="$$6" output="&lt;thumb&gt;https://\1|$$10&lt;/thumb&gt;" dest="9+">    
                    <expression repeat="yes" noclean="1">&lt;img src=&quot;\/\/(image.pmgstatic.com[^.]*\.jpg)</expression>
                </RegExp>
                <RegExp conditional="csfdart" input="$$9" output="&lt;fanart&gt;\1&lt;/fanart&gt;" dest="7">    
                    <expression repeat="no" noclean="1"></expression>
                </RegExp>
            <expression noclean="1" />
        </RegExp>
    </GetCSFDFanarts>
</scraper>
